@using KendoMatbaa.Models
@{
	var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "IsEmriGrid";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "IsEmriGridPartial" };

	    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "IsEmriGridPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "IsEmriGridPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "IsEmriGridPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

		settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;


        
        
        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Düzenle","TabView", "IsEmri", new { IsEmriId = DataBinder.Eval(c.DataItem, "IsEmriId") },null)
                );
            });
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 70;
        });
        
        
        

        //settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton() { ID = "btn", Text = "Custom Button" });
        //settings.ClientSideEvents.CustomButtonClick = string.Format("function(s, e) {{ if(e.buttonID == 'btn') window.location.href = '{0}' }}", DevExpressHelper.GetUrl(new { Controller = "Home", Action = "IsEmriDetayDuzenleme" })+"/id="+settings.KeyFieldName.ToString());

		settings.KeyFieldName = "IsEmriId";

		settings.SettingsPager.Visible = true;
		settings.Settings.ShowGroupPanel = true;
		settings.Settings.ShowFilterRow = true;
		settings.SettingsBehavior.AllowSelectByRowClick = true;

				settings.Columns.Add("IsEmriId");
				settings.Columns.Add("IsNo");
				settings.Columns.Add("TarihSayi");
				settings.Columns.Add("Adi");
				settings.Columns.Add("Personel");
				settings.Columns.Add("Telefon");
				settings.Columns.Add("KabulTarihi");
				settings.Columns.Add("TeslimTarihi");
				settings.Columns.Add("Aciklama");
				
                settings.Columns.Add(column =>
                {
                    column.FieldName = "IKBSBirimUN";
                    column.ColumnType = MVCxGridViewColumnType.ComboBox;
                    var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;

                    using (matbaaEntities ent = new matbaaEntities())
                    {
                        comboBoxProperties.DataSource = (from d in ent.IKBSBirim select new { d.BirimUN, d.Adi }).ToList();
                        comboBoxProperties.TextField = "Adi";
                        comboBoxProperties.ValueField = "BirimUN";
                        comboBoxProperties.ValueType = typeof(Guid);
                    }
                });
        
        
			});
		if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()